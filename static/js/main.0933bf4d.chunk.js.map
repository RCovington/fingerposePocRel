{"version":3,"sources":["rpsls-all.png","rpsls-rock.png","rpsls-paper.png","rpsls-scissors.png","rpsls-lizard.png","rpsls-spock.png","victory.png","thumbs_up.png","utilities.js","customGestures.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","0","color","size","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","loveYouGesture","GestureDescription","allFingers","Finger","Thumb","Index","Middle","Ring","Pinky","addCurl","FingerCurl","NoCurl","addDirection","FingerDirection","HorizontalLeft","HorizontalRight","VerticalUp","FullCurl","VerticalDown","rock","PartialCurl","paper","HalfCurl","DiagonalUpLeft","DiagonalUpRight","setWeight","scissors","DiagonalDownLeft","DiagonalDownRight","lizard","spock","ctr","change","id","image","document","getElementById","src","rpslsAll","rpslsRock","rpslsPaper","rpslsScissors","rpslsLizard","rpslsSpock","App","webcamRef","useRef","canvasRef","useState","emoji","setEmoji","images","thumbs_up","victory","runHandpose","a","handpose","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","GE","fp","estimate","undefined","gesture","gestures","confidence","poseData","map","maxConfidence","indexOf","max","apply","poseName","name","getContext","useEffect","className","ref","position","marginLeft","marginRight","left","right","textAlign","zindex","bottom","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0933bf4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rpsls-all.9a77dfe7.png\";","module.exports = __webpack_public_path__ + \"static/media/rpsls-rock.ca15151c.png\";","module.exports = __webpack_public_path__ + \"static/media/rpsls-paper.7080a7e9.png\";","module.exports = __webpack_public_path__ + \"static/media/rpsls-scissors.f60b53b6.png\";","module.exports = __webpack_public_path__ + \"static/media/rpsls-lizard.bfb0e42a.png\";","module.exports = __webpack_public_path__ + \"static/media/rpsls-spock.280e80ea.png\";","module.exports = __webpack_public_path__ + \"static/media/victory.6db44b04.png\";","module.exports = __webpack_public_path__ + \"static/media/thumbs_up.1cfa24a5.png\";","// Points for fingers\r\nconst fingerJoints = {\r\n  thumb: [0, 1, 2, 3, 4],\r\n  indexFinger: [0, 5, 6, 7, 8],\r\n  middleFinger: [0, 9, 10, 11, 12],\r\n  ringFinger: [0, 13, 14, 15, 16],\r\n  pinky: [0, 17, 18, 19, 20],\r\n};\r\n\r\n// Infinity Gauntlet Style\r\nconst style = {\r\n//0: { color: \"yellow\", size: 15 },\r\n  0: { color: \"gold\", size: 10 },\r\n  1: { color: \"gold\", size: 6 },\r\n  //2: { color: \"green\", size: 10 },\r\n  2: { color: \"gold\", size: 6 },\r\n  3: { color: \"gold\", size: 6 },\r\n  4: { color: \"gold\", size: 6 },\r\n  //5: { color: \"purple\", size: 10 },\r\n  5: { color: \"gold\", size: 6 },\r\n  6: { color: \"gold\", size: 6 },\r\n  7: { color: \"gold\", size: 6 },\r\n  8: { color: \"gold\", size: 6 },\r\n  //9: { color: \"blue\", size: 10 },\r\n  9: { color: \"gold\", size: 6 },\r\n  10: { color: \"gold\", size: 6 },\r\n  11: { color: \"gold\", size: 6 },\r\n  12: { color: \"gold\", size: 6 },\r\n  //13: { color: \"red\", size: 10 },\r\n  13: { color: \"gold\", size: 6 },\r\n  14: { color: \"gold\", size: 6 },\r\n  15: { color: \"gold\", size: 6 },\r\n  16: { color: \"gold\", size: 6 },\r\n  //17: { color: \"orange\", size: 10 },\r\n  17: { color: \"gold\", size: 6 },\r\n  18: { color: \"gold\", size: 6 },\r\n  19: { color: \"gold\", size: 6 },\r\n  20: { color: \"gold\", size: 6 },\r\n};\r\n\r\n// Drawing function\r\nexport const drawHand = (predictions, ctx) => {\r\n  // Check if we have predictions\r\n  if (predictions.length > 0) {\r\n    // Loop through each prediction\r\n    predictions.forEach((prediction) => {\r\n      // Grab landmarks\r\n      const landmarks = prediction.landmarks;\r\n\r\n      // Loop through fingers\r\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\r\n        let finger = Object.keys(fingerJoints)[j];\r\n        //  Loop through pairs of joints\r\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\r\n          // Get pairs of joints\r\n          const firstJointIndex = fingerJoints[finger][k];\r\n          const secondJointIndex = fingerJoints[finger][k + 1];\r\n\r\n          // Draw path\r\n          ctx.beginPath();\r\n          ctx.moveTo(\r\n            landmarks[firstJointIndex][0],\r\n            landmarks[firstJointIndex][1]\r\n          );\r\n          ctx.lineTo(\r\n            landmarks[secondJointIndex][0],\r\n            landmarks[secondJointIndex][1]\r\n          );\r\n          ctx.strokeStyle = \"plum\";\r\n          ctx.lineWidth = 4;\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n      // Loop through landmarks and draw em\r\n      for (let i = 0; i < landmarks.length; i++) {\r\n        // Get x point\r\n        const x = landmarks[i][0];\r\n        // Get y point\r\n        const y = landmarks[i][1];\r\n        // Start drawing\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\r\n\r\n        // Set line color\r\n        ctx.fillStyle = style[i][\"color\"];\r\n        ctx.fill();\r\n      }\r\n    });\r\n  }\r\n};\r\n","// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n// Define Gesture Description\r\nexport const loveYouGesture = new GestureDescription('i_love_you'); \r\n\r\nconst allFingers =  [Finger.Thumb, Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky];\r\n\r\n// Thumb \r\nloveYouGesture.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0)\r\nloveYouGesture.addDirection(Finger.Thumb, FingerDirection.HorizontalLeft, 0.25);\r\nloveYouGesture.addDirection(Finger.Thumb, FingerDirection.HorizontalRight, 0.25);\r\n\r\n// Index\r\nloveYouGesture.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0)\r\nloveYouGesture.addDirection(Finger.Index, FingerDirection.VerticalUp, 0.25);\r\n\r\n// Pinky\r\nloveYouGesture.addCurl(Finger.Pinky, FingerCurl.NoCurl, 1.0)\r\nloveYouGesture.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.25);\r\n\r\nfor(let finger of [Finger.Middle, Finger.Ring]){\r\n    loveYouGesture.addCurl(finger, FingerCurl.FullCurl, .75); \r\n    loveYouGesture.addDirection(finger, FingerDirection.VerticalDown, 0.25);\r\n}\r\n//----------------------\r\n// ROCK Gesture Description\r\nexport const rock = new GestureDescription('rock'); \r\n\r\nfor(let finger of allFingers){\r\n    rock.addCurl(finger, FingerCurl.FullCurl, 1.0); \r\n    rock.addCurl(finger, FingerCurl.PartialCurl, 1.0); \r\n}\r\n//----------------------\r\n// PAPER Gesture Description\r\nexport const paper = new GestureDescription('paper'); \r\n\r\nfor(let finger of allFingers){\r\n    paper.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 0.40);\r\n    paper.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\r\n    paper.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\r\n//    paper.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 4.0);\r\n//    paper.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 4.0);\r\n\r\n    // index:\r\n    paper.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\r\n    paper.addDirection(Finger.Index, FingerDirection.VerticalUp, 1.0);\r\n\r\n    // middle:\r\n    paper.addCurl(Finger.Middle, FingerCurl.NoCurl, 1.0);\r\n    paper.addDirection(Finger.Middle, FingerDirection.VerticalUp, 1.0);\r\n\r\n    // ring:\r\n    paper.addCurl(Finger.Ring, FingerCurl.NoCurl, 1.0);\r\n    paper.addDirection(Finger.Ring, FingerDirection.VerticalUp, 1.0);\r\n\r\n    // pinky:\r\n    paper.addCurl(Finger.Pinky, FingerCurl.NoCurl, 1.0);\r\n    paper.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 1.0);\r\n    paper.addDirection(Finger.Pinky, FingerDirection.DiagonalUpLeft, 2.0);\r\n    paper.addDirection(Finger.Pinky, FingerDirection.DiagonalUpRight, 2.0);\r\n   \r\n    // give additional weight to index and ring fingers\r\n//    paper.setWeight(Finger.Index, 2);\r\n//    paper.setWeight(Finger.Middle, 2);\r\n    paper.setWeight(Finger.Thumb, 2);\r\n}\r\n//----------------------\r\n// SCISSORS Gesture Description\r\nexport const scissors = new GestureDescription('scissors'); \r\n\r\n// thumb:\r\nscissors.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 1.0);\r\nscissors.addCurl(Finger.Thumb, FingerCurl.FullCurl, 1.0);\r\n\r\n// index:\r\nscissors.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\r\nscissors.addDirection(Finger.Index, FingerDirection.VerticalUp, 1.0);\r\nscissors.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 1.0);\r\nscissors.addDirection(Finger.Index, FingerDirection.DiagonalUpRight, 1.0);\r\n\r\n// middle:\r\nscissors.addCurl(Finger.Middle, FingerCurl.NoCurl, 1.0);\r\nscissors.addDirection(Finger.Middle, FingerDirection.VerticalUp, 1.0);\r\nscissors.addDirection(Finger.Middle, FingerDirection.DiagonalUpLeft, 1.0);\r\nscissors.addDirection(Finger.Middle, FingerDirection.DiagonalUpRight, 1.0);\r\n\r\n// ring:\r\nscissors.addCurl(Finger.Ring, FingerCurl.FullCurl, 1.0);\r\nscissors.addCurl(Finger.Ring, FingerCurl.HalfCurl, 1.0);\r\n//scissors.addDirection(Finger.Ring, FingerDirection.VerticalDown, 0.2);\r\nscissors.addDirection(Finger.Ring, FingerDirection.DiagonalDownLeft, 1.0);\r\nscissors.addDirection(Finger.Ring, FingerDirection.DiagonalDownRight, 1.0);\r\nscissors.addDirection(Finger.Ring, FingerDirection.DiagonalUpLeft, 1.0);\r\nscissors.addDirection(Finger.Ring, FingerDirection.DiagonalUpRight, 1.0);\r\n//scissors.addDirection(Finger.Ring, FingerDirection.HorizontalLeft, 0.2);\r\n\r\n// pinky:\r\nscissors.addCurl(Finger.Pinky, FingerCurl.FullCurl, 1.0);\r\nscissors.addCurl(Finger.Pinky, FingerCurl.HalfCurl, 1.0);\r\n//scissors.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.2);\r\nscissors.addDirection(Finger.Pinky, FingerDirection.DiagonalDownLeft, 1.0);\r\nscissors.addDirection(Finger.Pinky, FingerDirection.DiagonalDownRight, 1.0);\r\nscissors.addDirection(Finger.Pinky, FingerDirection.DiagonalUpLeft, 1.0);\r\nscissors.addDirection(Finger.Pinky, FingerDirection.DiagonalUpRight, 1.0);\r\n//scissors.addDirection(Finger.Pinky, FingerDirection.HorizontalLeft, 0.2);\r\n\r\n// give additional weight to index and ring fingers\r\nscissors.setWeight(Finger.Thumb, 2);\r\nscissors.setWeight(Finger.Pinky, 2);\r\n//----------------------\r\n// LIZARD Gesture Description\r\nexport const lizard = new GestureDescription('lizard'); \r\n\r\nfor(let finger of allFingers){\r\n    lizard.addCurl(finger, FingerCurl.NoCurl, 1.0); \r\n    lizard.addDirection(finger, FingerDirection.HorizontalLeft, 1.0);\r\n    lizard.addDirection(finger, FingerDirection.HorizontalRight, 1.0);\r\n    lizard.addDirection(finger, FingerDirection.DiagonalUpRight, 0.85);\r\n    lizard.addDirection(finger, FingerDirection.DiagonalUpLeft, 0.85);\r\n    lizard.addDirection(finger, FingerDirection.DiagonalDownRight, 0.75);\r\n    lizard.addDirection(finger, FingerDirection.DiagonalDownLeft, 0.75);\r\n}\r\nlizard.setWeight(Finger.Ring, 2);\r\nlizard.setWeight(Finger.Pinky, 2);\r\n//----------------------\r\n// SPOCK Gesture Description\r\nexport const spock = new GestureDescription('spock'); \r\nspock.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\r\nspock.addDirection(Finger.Thumb, FingerDirection.HorizontalLeft, 1.0);\r\nspock.addDirection(Finger.Thumb, FingerDirection.HorizontalRight, 1.0);\r\nspock.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 1.0);\r\nspock.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 1.0);\r\n\r\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]){\r\n    spock.addCurl(finger, FingerCurl.NoCurl, 1.0); \r\n    spock.addDirection(finger, FingerDirection.VerticalUp, 0.80);\r\n    spock.addDirection(finger, FingerDirection.VerticalDown, 0.80);\r\n\r\n    spock.addDirection(finger, FingerDirection.DiagonalUpRight, 1.0);\r\n    spock.addDirection(finger, FingerDirection.DiagonalUpLeft, 1.0);\r\n//    spock.addDirection(finger, FingerDirection.DiagonalDownRight, 0.70);\r\n//    spock.addDirection(finger, FingerDirection.DiagonalDownLeft, 0.70);\r\n    spock.setWeight(Finger.Thumb, 2);\r\n    spock.setWeight(Finger.Pinky, 2);\r\n}","// 0. Install fingerpose npm install fingerpose\r\n// 1. Add Use State\r\n// 2. Import emojis and finger pose import * as fp from \"fingerpose\";\r\n// 3. Setup hook and emoji object\r\n// 4. Update detect function for gesture handling\r\n// 5. Add emoji display to the screen\r\n\r\n///////// NEW STUFF ADDED USE STATE\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n///////// NEW STUFF ADDED USE STATE\r\n\r\n// import logo from './logo.svg';\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { drawHand } from \"./utilities\";\r\nimport { loveYouGesture, rock, paper, scissors, lizard, spock } from \"./customGestures\";\r\nimport rpslsAll from './rpsls-all.png'; \r\nimport rpslsRock from './rpsls-rock.png'; \r\nimport rpslsPaper from './rpsls-paper.png'; \r\nimport rpslsScissors from './rpsls-scissors.png'; \r\nimport rpslsLizard from './rpsls-lizard.png'; \r\nimport rpslsSpock from './rpsls-spock.png'; \r\n\r\n///////// NEW STUFF IMPORTS\r\nimport * as fp from \"fingerpose\";\r\nimport victory from \"./victory.png\";\r\nimport thumbs_up from \"./thumbs_up.png\";\r\nvar ctr = 0;\r\n///////// NEW STUFF IMPORTS\r\nfunction change(id){\r\n  var image = document.getElementById('rpsls');\r\n  image.src=rpslsAll; \r\n  if(id == \"rock\") { image.src=rpslsRock }\r\n  if(id == \"paper\") { image.src=rpslsPaper }\r\n  if(id == \"scissors\") { image.src=rpslsScissors }\r\n  if(id == \"lizard\") { image.src=rpslsLizard }\r\n  if(id == \"spock\") { image.src=rpslsSpock }\r\n}\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  ///////// NEW STUFF ADDED STATE HOOK\r\n  const [emoji, setEmoji] = useState(null);\r\n  const images = { thumbs_up: thumbs_up, victory: victory };\r\n  ///////// NEW STUFF ADDED STATE HOOK\r\n\r\n  const runHandpose = async () => {\r\n    const net = await handpose.load();\r\n//    console.log(\"Handpose model loaded.\");\r\n    if(emoji) {console.log(emoji);}\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 200);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n      // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const hand = await net.estimateHands(video);\r\n      // console.log(hand);\r\n\r\n      ///////// NEW STUFF ADDED GESTURE HANDLING\r\n      if (hand.length > 0) {\r\n\r\n        const GE = new fp.GestureEstimator([\r\n//          fp.Gestures.VictoryGesture,\r\n//          fp.Gestures.ThumbsUpGesture,\r\n          loveYouGesture,\r\n//          middleUp,\r\n          rock,\r\n          paper,\r\n          scissors,\r\n          lizard,\r\n          spock\r\n        ]);\r\n        const gesture = await GE.estimate(hand[0].landmarks, 5);\r\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n          ctr = 0;\r\n //         console.log(gesture.gestures);\r\n          console.log(\"confidence:  \" + gesture.gestures[0].confidence);\r\n          console.log(gesture.poseData);\r\n          \r\n          \r\n//          image.src = rpslsScissors;\r\n\r\n          const confidence = gesture.gestures.map(\r\n            (prediction) => prediction.confidence\r\n          );\r\n          const maxConfidence = confidence.indexOf(\r\n            Math.max.apply(null, confidence)\r\n          );\r\n          var poseName = gesture.gestures[maxConfidence].name\r\n          console.log(poseName);\r\n          change(poseName);\r\n\r\n          setEmoji(gesture.gestures[maxConfidence].name);\r\n//          console.log(emoji);\r\n\r\n        }\r\n      }\r\n      else {\r\n        ctr =  ctr + 1;\r\n        if(ctr > 5) { change(); }\r\n      }\r\n\r\n      ///////// NEW STUFF ADDED GESTURE HANDLING\r\n\r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runHandpose()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      \r\n        <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"left\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"left\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n        \r\n        {/* NEW STUFF */}\r\n        {emoji !== null ? (\r\n          <img\r\n            src={images[emoji]}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              left: 400,\r\n              bottom: 500,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              height: 100,\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {/* NEW STUFF */\r\n        \r\n        <img id=\"rpsls\" src={rpslsAll}\r\n        style={{\r\n          position: \"absolute\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          left: -1100,\r\n          bottom: 170,\r\n          right: 0,\r\n          textAlign: \"center\",\r\n          height: 400,\r\n        }}\r\n        />\r\n\r\n        }\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}